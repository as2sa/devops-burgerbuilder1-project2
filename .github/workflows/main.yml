# .github/workflows/main.yml

name: CI/CD Pipeline - Deploy Burger Builder to AKS

on:
  push:
    branches:
      - main # يتم التشغيل عند أي دَفْع (Push) على فرع main

env:
  # تحديد أسماء الموارد التي أنشأتها Terraform
  RESOURCE_GROUP: rg-burgerbuilder-tf-prod
  ACR_NAME: acrbgbuildertf
  AKS_NAME: aks-burgerbuilder-tf-prod
  IMAGE_NAME: burgerbuilder-web
  IMAGE_TAG: latest
  DEPLOYMENT_NAME: burgerbuilder-web-deployment
  
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4

      - name: 2. Azure Login using Service Principal (Merged Secret)
        uses: azure/login@v1
        with:
          # 🔑 هنا نستخدم السر المُدمج (AZURE_CREDENTIALS) بدلاً من الأسرار الفردية
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          enable-AzPSSession: true

      - name: 3. Build and Push Docker Image to ACR
        # ملاحظة: حتى مع استخدام creds أعلاه، سنترك هذه الخطوة تستخدم الأسرار الفردية كطريقة مصادقة
        # احتياطية لضمان عمل Docker Login مع ACR.
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }} 

      - run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        working-directory: ./src # يجب التأكد من وجود Dockerfile هنا
      
      - name: 4. Set up Kubeconfig for AKS
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_NAME }}
          
      - name: 5. Deploy to AKS
        uses: azure/k8s-deploy@v5
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          imagepullsecrets: |
            ${{ env.ACR_NAME }}-secret